global:
  addPrometheusAnnotations: true
  securityContext:
    runAsUser: 999
    runAsGroup: 999
    fsGroup: 999
    runAsNonRoot: true
  containerSecurityContext:
    runAsNonRoot: true
    readOnlyRootFilesystem: true
    allowPrivilegeEscalation: false
    seccompProfile:
      type: RuntimeDefault
    capabilities:
      drop:
        - ALL

configs:
  params:
    application.namespaces: "${join(",", argocd_application_namespaces)}"
    server.insecure: true

  cm:
    timeout.reconciliation: 30s
    application.resourceTrackingMethod: annotation
    exec.enabled: "false"
    admin.enabled: "true"
    statusbadge.enabled: "true"
    url: https://argocd.internal.devopslab.pagopa.it
    oidc.config: |
      name: Azure
      issuer: https://login.microsoftonline.com/${tenant_id}/v2.0
      clientID: ${client_id}
      clientSecret: $oidc.azure.clientSecret
      requestedIDTokenClaims:
        groups:
          essential: true
      requestedScopes:
        - openid
        - profile
        - email

  rbac:
    policy.csv: |
      p, role:readonly, applications, get, */*, allow
      p, role:readonly, projects, get, *, allow
      p, role:developer, applications, get, */*, allow
      p, role:developer, applications, sync, */*, allow
      p, role:developer, projects, get, *, allow
      p, role:admin, applications, *, */*, allow
      p, role:admin, projects, *, *, allow
      u, "021431d8-cb86-45ac-b9d2-ef9ad9e24e97", role:admin

server:
  replicas: 1
  autoscaling:
    enabled: true
    minReplicas: 1
    maxReplicas: 3
    targetCPUUtilizationPercentage: 80
    targetMemoryUtilizationPercentage: 80
    behavior:
      scaleDown:
        stabilizationWindowSeconds: 300
        policies:
          - type: Pods
            value: 1
            periodSeconds: 180
      scaleUp:
        stabilizationWindowSeconds: 60
        policies:
          - type: Pods
            value: 1
            periodSeconds: 60
  metrics:
    enabled: true
    serviceMonitor:
      enabled: true
  pdb:
    enabled: true
    minAvailable: 1
  resources:
    limits:
      cpu: 1000m
      memory: 1Gi
    requests:
      cpu: 500m
      memory: 512Mi
  ingress:
    enabled: true
    ingressClassName: "nginx"
    hostname: argocd.internal.devopslab.pagopa.it
    annotations:
      nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
      nginx.ingress.kubernetes.io/ssl-passthrough: "true"
      nginx.ingress.kubernetes.io/ssl-redirect: "true"
      nginx.ingress.kubernetes.io/grpc-backend: "true"
      nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
      nginx.ingress.kubernetes.io/proxy-body-size: "100m"
      nginx.ingress.kubernetes.io/proxy-read-timeout: "90"
    tls: false
    extraTls:
      - hosts:
          - argocd.internal.devopslab.pagopa.it
        secretName: argocd-internal-devopslab-pagopa-it

#redis-ha:
# enabled: true
# haproxy:
#   enabled: true
#   metrics:
#     enabled: true
#   resources:
#     limits:
#       cpu: 200m
#       memory: 256Mi
#     requests:
#       cpu: 100m
#       memory: 128Mi

redis:
  enabled: true

  resources:
    limits:
      cpu: 200m
      memory: 128Mi
    requests:
      cpu: 100m
      memory: 64Mi

  service:
    port: 6379

  metrics:
    enabled: true
    serviceMonitor:
      enabled: true

  containerPorts:
    metrics: 9121
    redis: 6379

  readinessProbe:
    enabled: true
    initialDelaySeconds: 30
    periodSeconds: 15
    timeoutSeconds: 15
    successThreshold: 1
    failureThreshold: 5

  livenessProbe:
    enabled: true
    initialDelaySeconds: 30
    periodSeconds: 15
    timeoutSeconds: 15
    successThreshold: 1
    failureThreshold: 5

controller:
  replicas: 1
  autoscaling:
    enabled: true
    minReplicas: 1
    maxReplicas: 3
    targetCPUUtilizationPercentage: 80
    targetMemoryUtilizationPercentage: 80
    behavior:
      scaleDown:
        stabilizationWindowSeconds: 300
        policies:
          - type: Pods
            value: 1
            periodSeconds: 180
      scaleUp:
        stabilizationWindowSeconds: 60
        policies:
          - type: Pods
            value: 1
            periodSeconds: 60
  metrics:
    enabled: true
    serviceMonitor:
      enabled: true
  pdb:
    enabled: true
    minAvailable: 1
  resources:
    limits:
      cpu: 1000m
      memory: 2Gi
    requests:
      cpu: 500m
      memory: 1Gi

repoServer:
  replicas: 1
  autoscaling:
    enabled: true
    minReplicas: 1
    maxReplicas: 3
    targetCPUUtilizationPercentage: 80
    targetMemoryUtilizationPercentage: 80
    behavior:
      scaleDown:
        stabilizationWindowSeconds: 300
        policies:
          - type: Pods
            value: 1
            periodSeconds: 180
      scaleUp:
        stabilizationWindowSeconds: 60
        policies:
          - type: Pods
            value: 1
            periodSeconds: 60
  metrics:
    enabled: true
    serviceMonitor:
      enabled: true
  pdb:
    enabled: true
    minAvailable: 1
  resources:
    limits:
      cpu: 1000m
      memory: 1Gi
    requests:
      cpu: 500m
      memory: 512Mi

applicationSet:
  replicas: 1
  autoscaling:
    enabled: true
    minReplicas: 1
    maxReplicas: 3
    targetCPUUtilizationPercentage: 80
    targetMemoryUtilizationPercentage: 80
    behavior:
      scaleDown:
        stabilizationWindowSeconds: 300
        policies:
          - type: Pods
            value: 1
            periodSeconds: 180
      scaleUp:
        stabilizationWindowSeconds: 60
        policies:
          - type: Pods
            value: 1
            periodSeconds: 60
  metrics:
    enabled: true
    serviceMonitor:
      enabled: true
  pdb:
    enabled: true
    minAvailable: 1
  resources:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 250m
      memory: 256Mi
